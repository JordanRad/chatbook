// Code generated by goa v3.11.3, DO NOT EDIT.
//
// notification client
//
// Command:
// $ goa gen github.com/JordanRad/chatbook/services/internal/design -o
// ./internal

package notification

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Client is the "notification" service client.
type Client struct {
	NotifyUserNamesUpdateEndpoint goa.Endpoint
}

// NewClient initializes a "notification" service client given the endpoints.
func NewClient(notifyUserNamesUpdate goa.Endpoint) *Client {
	return &Client{
		NotifyUserNamesUpdateEndpoint: notifyUserNamesUpdate,
	}
}

// NotifyUserNamesUpdate calls the "notifyUserNamesUpdate" endpoint of the
// "notification" service.
func (c *Client) NotifyUserNamesUpdate(ctx context.Context, p *NotifyUserNamesUpdatePayload) (res *BlankResponse, err error) {
	var ires any
	ires, err = c.NotifyUserNamesUpdateEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*BlankResponse), nil
}

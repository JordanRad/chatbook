// Code generated by goa v3.11.3, DO NOT EDIT.
//
// auth service
//
// Command:
// $ goa gen github.com/JordanRad/chatbook/services/internal/design -o
// ./internal

package auth

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Authentication service is responsible for handling user data and requests
type Service interface {
	// RefreshToken implements refreshToken.
	RefreshToken(context.Context, *RefreshTokenPayload) (res *LoginResponse, err error)
	// Login implements login.
	Login(context.Context, *LoginPayload) (res *LoginResponse, err error)
}

// ServiceName is the name of the service as defined in the design. This is the
// same value that is set in the endpoint request contexts under the ServiceKey
// key.
const ServiceName = "auth"

// MethodNames lists the service method names as defined in the design. These
// are the same values that are set in the endpoint request contexts under the
// MethodKey key.
var MethodNames = [2]string{"refreshToken", "login"}

// LoginPayload is the payload type of the auth service login method.
type LoginPayload struct {
	// User email
	Email string
	// User password
	Password string
}

// LoginResponse is the result type of the auth service refreshToken method.
type LoginResponse struct {
	// User's email
	Email string
	// JWT Token
	Token string
	// Refresh token
	RefreshToken string
	// User's role
	Role string
	// User account's ID
	ID *string
}

// RefreshTokenPayload is the payload type of the auth service refreshToken
// method.
type RefreshTokenPayload struct {
	// User email
	Email string
	// Refresh token
	RefreshToken string
}

// MakeWrongCredentials builds a goa.ServiceError from an error.
func MakeWrongCredentials(err error) *goa.ServiceError {
	return goa.NewServiceError(err, "WrongCredentials", false, false, false)
}

// Code generated by goa v3.11.3, DO NOT EDIT.
//
// chat service
//
// Command:
// $ goa gen github.com/JordanRad/chatbook/services/internal/design -o
// ./internal

package chat

import (
	"context"
)

// User service is responsible for handling user data and requests
type Service interface {
	// GetChatHistory implements getChatHistory.
	GetChatHistory(context.Context, *GetChatHistoryPayload) (res *ChatHistoryResponse, err error)
}

// ServiceName is the name of the service as defined in the design. This is the
// same value that is set in the endpoint request contexts under the ServiceKey
// key.
const ServiceName = "chat"

// MethodNames lists the service method names as defined in the design. These
// are the same values that are set in the endpoint request contexts under the
// MethodKey key.
var MethodNames = [1]string{"getChatHistory"}

// ChatHistoryResponse is the result type of the chat service getChatHistory
// method.
type ChatHistoryResponse struct {
	// Chatroom ID
	ID string
	// Messages Count
	Count int
	// Chat history
	Messages []*ChatMessage
}

type ChatMessage struct {
	// Previous message ID
	PreviousMessageID string
	// Next message ID
	NextMessageID string
	// Timestamp of the message
	Timestamp float64
}

// GetChatHistoryPayload is the payload type of the chat service getChatHistory
// method.
type GetChatHistoryPayload struct {
	// Chatroom ID
	ID *string
}

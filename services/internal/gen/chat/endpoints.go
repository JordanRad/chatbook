// Code generated by goa v3.11.3, DO NOT EDIT.
//
// chat endpoints
//
// Command:
// $ goa gen github.com/JordanRad/chatbook/services/internal/design -o
// ./internal

package chat

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Endpoints wraps the "chat" service endpoints.
type Endpoints struct {
	GetChatHistory goa.Endpoint
}

// NewEndpoints wraps the methods of the "chat" service with endpoints.
func NewEndpoints(s Service) *Endpoints {
	return &Endpoints{
		GetChatHistory: NewGetChatHistoryEndpoint(s),
	}
}

// Use applies the given middleware to all the "chat" service endpoints.
func (e *Endpoints) Use(m func(goa.Endpoint) goa.Endpoint) {
	e.GetChatHistory = m(e.GetChatHistory)
}

// NewGetChatHistoryEndpoint returns an endpoint function that calls the method
// "getChatHistory" of service "chat".
func NewGetChatHistoryEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*GetChatHistoryPayload)
		return s.GetChatHistory(ctx, p)
	}
}

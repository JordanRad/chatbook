// Code generated by goa v3.11.3, DO NOT EDIT.
//
// chat endpoints
//
// Command:
// $ goa gen github.com/JordanRad/chatbook/services/internal/design -o
// ./internal

package chat

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Endpoints wraps the "chat" service endpoints.
type Endpoints struct {
	GetConversationHistory goa.Endpoint
	SearchInConversation   goa.Endpoint
	GetConversationsList   goa.Endpoint
	AddConversation        goa.Endpoint
}

// NewEndpoints wraps the methods of the "chat" service with endpoints.
func NewEndpoints(s Service) *Endpoints {
	return &Endpoints{
		GetConversationHistory: NewGetConversationHistoryEndpoint(s),
		SearchInConversation:   NewSearchInConversationEndpoint(s),
		GetConversationsList:   NewGetConversationsListEndpoint(s),
		AddConversation:        NewAddConversationEndpoint(s),
	}
}

// Use applies the given middleware to all the "chat" service endpoints.
func (e *Endpoints) Use(m func(goa.Endpoint) goa.Endpoint) {
	e.GetConversationHistory = m(e.GetConversationHistory)
	e.SearchInConversation = m(e.SearchInConversation)
	e.GetConversationsList = m(e.GetConversationsList)
	e.AddConversation = m(e.AddConversation)
}

// NewGetConversationHistoryEndpoint returns an endpoint function that calls
// the method "getConversationHistory" of service "chat".
func NewGetConversationHistoryEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*GetConversationHistoryPayload)
		return s.GetConversationHistory(ctx, p)
	}
}

// NewSearchInConversationEndpoint returns an endpoint function that calls the
// method "searchInConversation" of service "chat".
func NewSearchInConversationEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*SearchInConversationPayload)
		return s.SearchInConversation(ctx, p)
	}
}

// NewGetConversationsListEndpoint returns an endpoint function that calls the
// method "getConversationsList" of service "chat".
func NewGetConversationsListEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*GetConversationsListPayload)
		return s.GetConversationsList(ctx, p)
	}
}

// NewAddConversationEndpoint returns an endpoint function that calls the
// method "addConversation" of service "chat".
func NewAddConversationEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*AddConversationPayload)
		return s.AddConversation(ctx, p)
	}
}

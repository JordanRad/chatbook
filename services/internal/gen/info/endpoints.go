// Code generated by goa v3.11.3, DO NOT EDIT.
//
// info endpoints
//
// Command:
// $ goa gen github.com/JordanRad/chatbook/services/internal/design -o
// ./internal

package info

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Endpoints wraps the "info" service endpoints.
type Endpoints struct {
	GetInfo goa.Endpoint
}

// NewEndpoints wraps the methods of the "info" service with endpoints.
func NewEndpoints(s Service) *Endpoints {
	return &Endpoints{
		GetInfo: NewGetInfoEndpoint(s),
	}
}

// Use applies the given middleware to all the "info" service endpoints.
func (e *Endpoints) Use(m func(goa.Endpoint) goa.Endpoint) {
	e.GetInfo = m(e.GetInfo)
}

// NewGetInfoEndpoint returns an endpoint function that calls the method
// "getInfo" of service "info".
func NewGetInfoEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		return s.GetInfo(ctx)
	}
}

swagger: "2.0"
info:
    title: Chatbook Microservices
    version: ""
host: localhost:80
consumes:
    - application/json
    - application/xml
    - application/gob
produces:
    - application/json
    - application/xml
    - application/gob
paths:
    /api/user-management/v1/auth/login:
        post:
            tags:
                - auth
            summary: login auth
            operationId: auth#login
            parameters:
                - name: LoginRequestBody
                  in: body
                  required: true
                  schema:
                    $ref: '#/definitions/AuthLoginRequestBody'
                    required:
                        - email
                        - password
            responses:
                "200":
                    description: OK response.
                    schema:
                        $ref: '#/definitions/AuthLoginResponseBody'
                        required:
                            - email
                            - token
                            - refresh_token
                            - role
                "404":
                    description: Email and/or password don't match
                    schema:
                        $ref: '#/definitions/AuthLoginWrongCredentialsResponseBody'
            schemes:
                - http
    /api/user-management/v1/auth/refresh-token:
        post:
            tags:
                - auth
            summary: refreshToken auth
            operationId: auth#refreshToken
            parameters:
                - name: RefreshTokenRequestBody
                  in: body
                  required: true
                  schema:
                    $ref: '#/definitions/AuthRefreshTokenRequestBody'
                    required:
                        - email
                        - refreshToken
            responses:
                "200":
                    description: OK response.
                    schema:
                        $ref: '#/definitions/AuthRefreshTokenResponseBody'
                        required:
                            - email
                            - token
                            - refresh_token
                            - role
            schemes:
                - http
    /api/user-management/v1/info:
        get:
            tags:
                - info
            summary: getInfo info
            operationId: info#getInfo
            responses:
                "200":
                    description: OK response.
                    schema:
                        $ref: '#/definitions/InfoGetInfoResponseBody'
                        required:
                            - message
            schemes:
                - http
    /api/user-management/v1/users/friend/{id}:
        post:
            tags:
                - user
            summary: addFriend user
            operationId: user#addFriend
            parameters:
                - name: id
                  in: path
                  description: User ID to add
                  required: true
                  type: string
            responses:
                "200":
                    description: OK response.
                    schema:
                        $ref: '#/definitions/UserAddFriendResponseBody'
                        required:
                            - message
            schemes:
                - http
    /api/user-management/v1/users/friends/{id}:
        delete:
            tags:
                - user
            summary: removeFriend user
            operationId: user#removeFriend
            parameters:
                - name: id
                  in: path
                  description: User ID to delete
                  required: true
                  type: string
            responses:
                "200":
                    description: OK response.
                    schema:
                        $ref: '#/definitions/UserRemoveFriendResponseBody'
                        required:
                            - message
            schemes:
                - http
    /api/user-management/v1/users/profile:
        get:
            tags:
                - user
            summary: getProfile user
            operationId: user#getProfile
            responses:
                "200":
                    description: OK response.
                    schema:
                        $ref: '#/definitions/UserGetProfileResponseBody'
                        required:
                            - id
                            - email
                            - firstName
                            - lastName
                            - friendsList
            schemes:
                - http
        put:
            tags:
                - user
            summary: updateProfileNames user
            operationId: user#updateProfileNames
            parameters:
                - name: UpdateProfileNamesRequestBody
                  in: body
                  required: true
                  schema:
                    $ref: '#/definitions/UserUpdateProfileNamesRequestBody'
                    required:
                        - firstName
                        - lastName
            responses:
                "200":
                    description: OK response.
                    schema:
                        $ref: '#/definitions/UserUpdateProfileNamesResponseBody'
                        required:
                            - message
            schemes:
                - http
    /api/user-management/v1/users/register:
        post:
            tags:
                - user
            summary: register user
            operationId: user#register
            parameters:
                - name: RegisterRequestBody
                  in: body
                  required: true
                  schema:
                    $ref: '#/definitions/UserRegisterRequestBody'
                    required:
                        - email
                        - password
                        - confirmedPassword
                        - firstName
                        - lastName
            responses:
                "200":
                    description: OK response.
                    schema:
                        $ref: '#/definitions/UserRegisterResponseBody'
                        required:
                            - message
                "409":
                    description: Provided passwords are not the same
                    schema:
                        $ref: '#/definitions/UserRegisterUnmatchingPassowrdsResponseBody'
            schemes:
                - http
definitions:
    AuthLoginRequestBody:
        title: AuthLoginRequestBody
        type: object
        properties:
            email:
                type: string
                description: User email
                example: Qui voluptates nostrum iure incidunt dolorem.
            password:
                type: string
                description: User password
                example: Qui sequi voluptates.
        example:
            email: Asperiores illum accusantium nam ipsa.
            password: Natus animi aperiam veniam enim.
        required:
            - email
            - password
    AuthLoginResponseBody:
        title: AuthLoginResponseBody
        type: object
        properties:
            email:
                type: string
                description: User's email
                example: At aut facere molestiae cumque quia blanditiis.
            id:
                type: string
                description: User account's ID
                example: Molestiae similique omnis voluptate pariatur non.
            refresh_token:
                type: string
                description: Refresh token
                example: Eos quidem sapiente ex et sunt earum.
            role:
                type: string
                description: User's role
                example: Enim vel sapiente.
            token:
                type: string
                description: JWT Token
                example: Numquam amet quia vero.
        example:
            email: Cum soluta possimus accusamus similique quibusdam.
            id: Nihil excepturi dolore eveniet ratione.
            refresh_token: Occaecati minima amet architecto sint.
            role: Aliquam modi deleniti earum ea repellendus.
            token: Veniam eos rerum quas et et.
        required:
            - email
            - token
            - refresh_token
            - role
    AuthLoginWrongCredentialsResponseBody:
        title: 'Mediatype identifier: application/vnd.goa.error; view=default'
        type: object
        properties:
            fault:
                type: boolean
                description: Is the error a server-side fault?
                example: true
            id:
                type: string
                description: ID is a unique identifier for this particular occurrence of the problem.
                example: 123abc
            message:
                type: string
                description: Message is a human-readable explanation specific to this occurrence of the problem.
                example: parameter 'p' must be an integer
            name:
                type: string
                description: Name is the name of this class of errors.
                example: bad_request
            temporary:
                type: boolean
                description: Is the error temporary?
                example: true
            timeout:
                type: boolean
                description: Is the error a timeout?
                example: false
        description: login_WrongCredentials_response_body result type (default view)
        example:
            fault: false
            id: 123abc
            message: parameter 'p' must be an integer
            name: bad_request
            temporary: true
            timeout: true
        required:
            - name
            - id
            - message
            - temporary
            - timeout
            - fault
    AuthRefreshTokenRequestBody:
        title: AuthRefreshTokenRequestBody
        type: object
        properties:
            email:
                type: string
                description: User email
                example: Delectus ut sed soluta earum ab.
            refreshToken:
                type: string
                description: Refresh token
                example: Ipsa sint.
        example:
            email: Et est consequatur voluptatem quas libero inventore.
            refreshToken: Tempore consequatur nemo laboriosam.
        required:
            - email
            - refreshToken
    AuthRefreshTokenResponseBody:
        title: AuthRefreshTokenResponseBody
        type: object
        properties:
            email:
                type: string
                description: User's email
                example: Expedita beatae et alias.
            id:
                type: string
                description: User account's ID
                example: Magni officia maxime aut unde libero.
            refresh_token:
                type: string
                description: Refresh token
                example: Nisi eos vel atque necessitatibus eum.
            role:
                type: string
                description: User's role
                example: Et velit illo fugit.
            token:
                type: string
                description: JWT Token
                example: Quo quia et.
        example:
            email: Ea autem et rerum ad.
            id: Dolor et minus.
            refresh_token: Quia repellat et quia excepturi error.
            role: Aliquid doloremque omnis reprehenderit eos.
            token: Quisquam laudantium suscipit qui nesciunt.
        required:
            - email
            - token
            - refresh_token
            - role
    FriendResponseBody:
        title: FriendResponseBody
        type: object
        properties:
            email:
                type: string
                description: Email
                example: Rem dicta.
            firstName:
                type: string
                description: First name
                example: Praesentium aperiam.
            id:
                type: string
                description: User ID
                example: Mollitia sequi magnam et beatae in accusamus.
            lastName:
                type: string
                description: Last name
                example: Voluptates quam rerum qui molestias veritatis.
        example:
            email: Labore culpa.
            firstName: Voluptatum ut libero veritatis odio.
            id: Aut quisquam eum suscipit consequatur dolor ducimus.
            lastName: Et ratione perspiciatis.
        required:
            - id
            - email
            - firstName
            - lastName
    InfoGetInfoResponseBody:
        title: InfoGetInfoResponseBody
        type: object
        properties:
            message:
                type: string
                description: Operation status
                example: Ad voluptatem dolor quae.
        example:
            message: Deleniti aut.
        required:
            - message
    UserAddFriendResponseBody:
        title: UserAddFriendResponseBody
        type: object
        properties:
            message:
                type: string
                description: Operation status
                example: Ut doloremque qui voluptatem sed odit.
        example:
            message: Aliquam beatae ipsam aut.
        required:
            - message
    UserGetProfileResponseBody:
        title: UserGetProfileResponseBody
        type: object
        properties:
            email:
                type: string
                description: Email
                example: Dolores officiis vitae quidem.
            firstName:
                type: string
                description: First name
                example: Debitis iste et consequatur fugiat.
            friendsList:
                type: array
                items:
                    $ref: '#/definitions/FriendResponseBody'
                description: Friendslist
                example:
                    - email: Dolorum rerum.
                      firstName: Dolores quibusdam.
                      id: Maxime molestiae.
                      lastName: Labore tempora.
                    - email: Dolorum rerum.
                      firstName: Dolores quibusdam.
                      id: Maxime molestiae.
                      lastName: Labore tempora.
            id:
                type: string
                description: User ID
                example: Ratione molestiae expedita quam.
            lastName:
                type: string
                description: Last name
                example: Ad aut eius labore maiores eos omnis.
        example:
            email: Quia minus dolores enim excepturi.
            firstName: Blanditiis ut nostrum rerum soluta ut.
            friendsList:
                - email: Dolorum rerum.
                  firstName: Dolores quibusdam.
                  id: Maxime molestiae.
                  lastName: Labore tempora.
                - email: Dolorum rerum.
                  firstName: Dolores quibusdam.
                  id: Maxime molestiae.
                  lastName: Labore tempora.
                - email: Dolorum rerum.
                  firstName: Dolores quibusdam.
                  id: Maxime molestiae.
                  lastName: Labore tempora.
            id: Sapiente qui totam.
            lastName: Esse nisi quod at aspernatur et repellendus.
        required:
            - id
            - email
            - firstName
            - lastName
            - friendsList
    UserRegisterRequestBody:
        title: UserRegisterRequestBody
        type: object
        properties:
            confirmedPassword:
                type: string
                description: Confirmed password of the user
                example: Aut saepe.
            email:
                type: string
                description: User email
                example: Quia sint.
            firstName:
                type: string
                description: User first name
                example: Fugit aut id velit.
            lastName:
                type: string
                description: User last name
                example: Fuga ut.
            password:
                type: string
                description: User password
                example: Enim modi consequatur architecto voluptas at.
        example:
            confirmedPassword: Esse adipisci hic assumenda.
            email: Quia quaerat sapiente alias sint.
            firstName: Doloribus libero repellendus non.
            lastName: Iste omnis exercitationem.
            password: Nulla et.
        required:
            - email
            - password
            - confirmedPassword
            - firstName
            - lastName
    UserRegisterResponseBody:
        title: UserRegisterResponseBody
        type: object
        properties:
            message:
                type: string
                description: Operation status
                example: Labore aut vel.
        example:
            message: Eligendi reiciendis fuga.
        required:
            - message
    UserRegisterUniqueEmailErrorResponseBody:
        title: 'Mediatype identifier: application/vnd.goa.error; view=default'
        type: object
        properties:
            fault:
                type: boolean
                description: Is the error a server-side fault?
                example: true
            id:
                type: string
                description: ID is a unique identifier for this particular occurrence of the problem.
                example: 123abc
            message:
                type: string
                description: Message is a human-readable explanation specific to this occurrence of the problem.
                example: parameter 'p' must be an integer
            name:
                type: string
                description: Name is the name of this class of errors.
                example: bad_request
            temporary:
                type: boolean
                description: Is the error temporary?
                example: false
            timeout:
                type: boolean
                description: Is the error a timeout?
                example: false
        description: register_UniqueEmailError_response_body result type (default view)
        example:
            fault: false
            id: 123abc
            message: parameter 'p' must be an integer
            name: bad_request
            temporary: true
            timeout: false
        required:
            - name
            - id
            - message
            - temporary
            - timeout
            - fault
    UserRegisterUnmatchingPassowrdsResponseBody:
        title: 'Mediatype identifier: application/vnd.goa.error; view=default'
        type: object
        properties:
            fault:
                type: boolean
                description: Is the error a server-side fault?
                example: true
            id:
                type: string
                description: ID is a unique identifier for this particular occurrence of the problem.
                example: 123abc
            message:
                type: string
                description: Message is a human-readable explanation specific to this occurrence of the problem.
                example: parameter 'p' must be an integer
            name:
                type: string
                description: Name is the name of this class of errors.
                example: bad_request
            temporary:
                type: boolean
                description: Is the error temporary?
                example: false
            timeout:
                type: boolean
                description: Is the error a timeout?
                example: false
        description: register_UnmatchingPassowrds_response_body result type (default view)
        example:
            fault: true
            id: 123abc
            message: parameter 'p' must be an integer
            name: bad_request
            temporary: false
            timeout: true
        required:
            - name
            - id
            - message
            - temporary
            - timeout
            - fault
    UserRemoveFriendResponseBody:
        title: UserRemoveFriendResponseBody
        type: object
        properties:
            message:
                type: string
                description: Operation status
                example: Quasi eum dignissimos excepturi.
        example:
            message: Ut harum.
        required:
            - message
    UserUpdateProfileNamesRequestBody:
        title: UserUpdateProfileNamesRequestBody
        type: object
        properties:
            firstName:
                type: string
                description: Updated user first name
                example: Error veritatis.
            lastName:
                type: string
                description: Updated user last name
                example: Doloremque maxime molestiae natus voluptatem.
        example:
            firstName: Omnis ut quod quia beatae magni consequatur.
            lastName: Qui quasi rerum fugit cum.
        required:
            - firstName
            - lastName
    UserUpdateProfileNamesResponseBody:
        title: UserUpdateProfileNamesResponseBody
        type: object
        properties:
            message:
                type: string
                description: Operation status
                example: Magnam totam dolorem.
        example:
            message: Eaque vel.
        required:
            - message

swagger: "2.0"
info:
    title: Chatbook Microservices
    version: ""
host: localhost:80
consumes:
    - application/json
    - application/xml
    - application/gob
produces:
    - application/json
    - application/xml
    - application/gob
paths:
    /api/chat/v1/conversation:
        post:
            tags:
                - chat
            summary: addConversation chat
            operationId: chat#addConversation
            parameters:
                - name: AddConversationRequestBody
                  in: body
                  required: true
                  schema:
                    $ref: '#/definitions/ChatAddConversationRequestBody'
                    required:
                        - participants
            responses:
                "200":
                    description: OK response.
                    schema:
                        $ref: '#/definitions/ChatAddConversationResponseBody'
                        required:
                            - message
            schemes:
                - http
    /api/chat/v1/conversations:
        get:
            tags:
                - chat
            summary: getConversationsList chat
            operationId: chat#getConversationsList
            parameters:
                - name: limit
                  in: query
                  description: Messages count
                  required: false
                  type: integer
                  default: 100
            responses:
                "200":
                    description: OK response.
                    schema:
                        $ref: '#/definitions/ChatGetConversationsListResponseBody'
                        required:
                            - total
                            - resources
            schemes:
                - http
    /api/chat/v1/conversations/{ID}:
        get:
            tags:
                - chat
            summary: searchInConversation chat
            operationId: chat#searchInConversation
            parameters:
                - name: limit
                  in: query
                  description: Messages count
                  required: false
                  type: integer
                  default: 200
                - name: searchInput
                  in: query
                  description: Input
                  required: false
                  type: string
                  default: "200"
                  minLength: 5
                - name: ID
                  in: path
                  description: Conversation ID
                  required: true
                  type: string
            responses:
                "200":
                    description: OK response.
                    schema:
                        $ref: '#/definitions/ChatSearchInConversationResponseBody'
                        required:
                            - id
                            - count
                            - messages
            schemes:
                - http
    /api/chat/v1/conversations/{ID}/history:
        get:
            tags:
                - chat
            summary: getConversationHistory chat
            operationId: chat#getConversationHistory
            parameters:
                - name: limit
                  in: query
                  description: Messages count
                  required: false
                  type: integer
                  default: 200
                - name: beforeTimestamp
                  in: query
                  description: Before timestamp
                  required: false
                  type: integer
                  format: int64
                  default: 1257894000
                - name: ID
                  in: path
                  description: Conversation ID
                  required: true
                  type: string
            responses:
                "200":
                    description: OK response.
                    schema:
                        $ref: '#/definitions/ChatGetConversationHistoryResponseBody'
                        required:
                            - id
                            - count
                            - messages
            schemes:
                - http
    /api/user-management/v1/auth/login:
        post:
            tags:
                - auth
            summary: login auth
            operationId: auth#login
            parameters:
                - name: LoginRequestBody
                  in: body
                  required: true
                  schema:
                    $ref: '#/definitions/AuthLoginRequestBody'
                    required:
                        - email
                        - password
            responses:
                "200":
                    description: OK response.
                    schema:
                        $ref: '#/definitions/AuthLoginResponseBody'
                        required:
                            - email
                            - token
                            - refresh_token
                            - role
                "404":
                    description: Email and/or password don't match
                    schema:
                        $ref: '#/definitions/AuthLoginWrongCredentialsResponseBody'
            schemes:
                - http
    /api/user-management/v1/auth/refresh-token:
        post:
            tags:
                - auth
            summary: refreshToken auth
            operationId: auth#refreshToken
            parameters:
                - name: RefreshTokenRequestBody
                  in: body
                  required: true
                  schema:
                    $ref: '#/definitions/AuthRefreshTokenRequestBody'
                    required:
                        - email
                        - refreshToken
            responses:
                "200":
                    description: OK response.
                    schema:
                        $ref: '#/definitions/AuthRefreshTokenResponseBody'
                        required:
                            - email
                            - token
                            - refresh_token
                            - role
            schemes:
                - http
    /api/user-management/v1/info:
        get:
            tags:
                - info
            summary: getInfo info
            operationId: info#getInfo
            responses:
                "200":
                    description: OK response.
                    schema:
                        $ref: '#/definitions/InfoGetInfoResponseBody'
                        required:
                            - message
            schemes:
                - http
    /api/user-management/v1/users/friend/{id}:
        post:
            tags:
                - user
            summary: addFriend user
            operationId: user#addFriend
            parameters:
                - name: id
                  in: path
                  description: User ID to add
                  required: true
                  type: string
            responses:
                "200":
                    description: OK response.
                    schema:
                        $ref: '#/definitions/UserAddFriendResponseBody'
                        required:
                            - message
            schemes:
                - http
    /api/user-management/v1/users/friends/{id}:
        delete:
            tags:
                - user
            summary: removeFriend user
            operationId: user#removeFriend
            parameters:
                - name: id
                  in: path
                  description: User ID to delete
                  required: true
                  type: string
            responses:
                "200":
                    description: OK response.
                    schema:
                        $ref: '#/definitions/UserRemoveFriendResponseBody'
                        required:
                            - message
            schemes:
                - http
    /api/user-management/v1/users/profile:
        get:
            tags:
                - user
            summary: getProfile user
            operationId: user#getProfile
            responses:
                "200":
                    description: OK response.
                    schema:
                        $ref: '#/definitions/UserGetProfileResponseBody'
                        required:
                            - id
                            - email
                            - firstName
                            - lastName
                            - friendsList
            schemes:
                - http
        put:
            tags:
                - user
            summary: updateProfileNames user
            operationId: user#updateProfileNames
            parameters:
                - name: UpdateProfileNamesRequestBody
                  in: body
                  required: true
                  schema:
                    $ref: '#/definitions/UserUpdateProfileNamesRequestBody'
                    required:
                        - firstName
                        - lastName
            responses:
                "200":
                    description: OK response.
                    schema:
                        $ref: '#/definitions/UserUpdateProfileNamesResponseBody'
                        required:
                            - message
            schemes:
                - http
    /api/user-management/v1/users/register:
        post:
            tags:
                - user
            summary: register user
            operationId: user#register
            parameters:
                - name: RegisterRequestBody
                  in: body
                  required: true
                  schema:
                    $ref: '#/definitions/UserRegisterRequestBody'
                    required:
                        - email
                        - password
                        - confirmedPassword
                        - firstName
                        - lastName
            responses:
                "200":
                    description: OK response.
                    schema:
                        $ref: '#/definitions/UserRegisterResponseBody'
                        required:
                            - message
                "409":
                    description: Provided passwords are not the same
                    schema:
                        $ref: '#/definitions/UserRegisterUnmatchingPassowrdsResponseBody'
            schemes:
                - http
definitions:
    AuthLoginRequestBody:
        title: AuthLoginRequestBody
        type: object
        properties:
            email:
                type: string
                description: User email
                example: Ut velit velit numquam.
            password:
                type: string
                description: User password
                example: Dolorem saepe voluptate veniam incidunt inventore illum.
        example:
            email: Delectus possimus nam accusamus.
            password: Aliquid debitis amet officiis dicta ea.
        required:
            - email
            - password
    AuthLoginResponseBody:
        title: AuthLoginResponseBody
        type: object
        properties:
            email:
                type: string
                description: User's email
                example: Error veritatis.
            id:
                type: string
                description: User account's ID
                example: Ut doloremque qui voluptatem sed odit.
            refresh_token:
                type: string
                description: Refresh token
                example: Omnis ut quod quia beatae magni consequatur.
            role:
                type: string
                description: User's role
                example: Qui quasi rerum fugit cum.
            token:
                type: string
                description: JWT Token
                example: Doloremque maxime molestiae natus voluptatem.
        example:
            email: Aliquam beatae ipsam aut.
            id: Quis eligendi ullam quasi enim laudantium aliquam.
            refresh_token: Ut harum.
            role: Quaerat iure quod ut voluptate.
            token: Quasi eum dignissimos excepturi.
        required:
            - email
            - token
            - refresh_token
            - role
    AuthLoginWrongCredentialsResponseBody:
        title: 'Mediatype identifier: application/vnd.goa.error; view=default'
        type: object
        properties:
            fault:
                type: boolean
                description: Is the error a server-side fault?
                example: true
            id:
                type: string
                description: ID is a unique identifier for this particular occurrence of the problem.
                example: 123abc
            message:
                type: string
                description: Message is a human-readable explanation specific to this occurrence of the problem.
                example: parameter 'p' must be an integer
            name:
                type: string
                description: Name is the name of this class of errors.
                example: bad_request
            temporary:
                type: boolean
                description: Is the error temporary?
                example: true
            timeout:
                type: boolean
                description: Is the error a timeout?
                example: false
        description: login_WrongCredentials_response_body result type (default view)
        example:
            fault: true
            id: 123abc
            message: parameter 'p' must be an integer
            name: bad_request
            temporary: false
            timeout: false
        required:
            - name
            - id
            - message
            - temporary
            - timeout
            - fault
    AuthRefreshTokenRequestBody:
        title: AuthRefreshTokenRequestBody
        type: object
        properties:
            email:
                type: string
                description: User email
                example: Rerum soluta ut deleniti esse.
            refreshToken:
                type: string
                description: Refresh token
                example: Quod at aspernatur et repellendus earum.
        example:
            email: Magnam totam dolorem.
            refreshToken: Eaque vel.
        required:
            - email
            - refreshToken
    AuthRefreshTokenResponseBody:
        title: AuthRefreshTokenResponseBody
        type: object
        properties:
            email:
                type: string
                description: User's email
                example: Rem dicta.
            id:
                type: string
                description: User account's ID
                example: Labore culpa.
            refresh_token:
                type: string
                description: Refresh token
                example: Voluptates quam rerum qui molestias veritatis.
            role:
                type: string
                description: User's role
                example: Aut quisquam eum suscipit consequatur dolor ducimus.
            token:
                type: string
                description: JWT Token
                example: Praesentium aperiam.
        example:
            email: Voluptatum ut libero veritatis odio.
            id: Excepturi dolore blanditiis ut.
            refresh_token: Quia sapiente qui.
            role: Aut quia minus dolores.
            token: Et ratione perspiciatis.
        required:
            - email
            - token
            - refresh_token
            - role
    ChatAddConversationRequestBody:
        title: ChatAddConversationRequestBody
        type: object
        properties:
            participants:
                type: array
                items:
                    $ref: '#/definitions/FriendRequestBody'
                description: Participants
                example:
                    - email: Tempore consequatur nemo laboriosam.
                      firstName: At aut facere molestiae cumque quia blanditiis.
                      id: Quas libero inventore.
                      lastName: Numquam amet quia vero.
                    - email: Tempore consequatur nemo laboriosam.
                      firstName: At aut facere molestiae cumque quia blanditiis.
                      id: Quas libero inventore.
                      lastName: Numquam amet quia vero.
        example:
            participants:
                - email: Tempore consequatur nemo laboriosam.
                  firstName: At aut facere molestiae cumque quia blanditiis.
                  id: Quas libero inventore.
                  lastName: Numquam amet quia vero.
                - email: Tempore consequatur nemo laboriosam.
                  firstName: At aut facere molestiae cumque quia blanditiis.
                  id: Quas libero inventore.
                  lastName: Numquam amet quia vero.
        required:
            - participants
    ChatAddConversationResponseBody:
        title: ChatAddConversationResponseBody
        type: object
        properties:
            message:
                type: string
                description: Operation status
                example: Sapiente nostrum minima reiciendis.
        example:
            message: Qui beatae deserunt nihil qui recusandae hic.
        required:
            - message
    ChatGetConversationHistoryResponseBody:
        title: ChatGetConversationHistoryResponseBody
        type: object
        properties:
            count:
                type: integer
                description: Messages Count
                example: 1328949700046813612
                format: int64
            id:
                type: string
                description: Chatroom ID
                example: Nulla sed.
            messages:
                type: array
                items:
                    $ref: '#/definitions/ConversationMessageResponseBody'
                description: Chat history
                example:
                    - content: Et et.
                      senderID: Et alias qui.
                      timestamp: 0.27752549351619993
                    - content: Et et.
                      senderID: Et alias qui.
                      timestamp: 0.27752549351619993
                    - content: Et et.
                      senderID: Et alias qui.
                      timestamp: 0.27752549351619993
                    - content: Et et.
                      senderID: Et alias qui.
                      timestamp: 0.27752549351619993
        example:
            count: 8467446665481781995
            id: Illo officiis sed facilis quis blanditiis rem.
            messages:
                - content: Et et.
                  senderID: Et alias qui.
                  timestamp: 0.27752549351619993
                - content: Et et.
                  senderID: Et alias qui.
                  timestamp: 0.27752549351619993
                - content: Et et.
                  senderID: Et alias qui.
                  timestamp: 0.27752549351619993
        required:
            - id
            - count
            - messages
    ChatGetConversationsListResponseBody:
        title: ChatGetConversationsListResponseBody
        type: object
        properties:
            resources:
                type: array
                items:
                    $ref: '#/definitions/ConversationResponseBody'
                description: Chat history
                example:
                    - ID: Similique aliquid doloremque omnis.
                      lastMessageContent: Minus nisi.
                      lastMessageDeliveredAt: Ut sed.
                      lastMessageSenderID: Eos rerum dolor.
                      otherParticipantID: Earum ab est ipsa sint quasi.
                    - ID: Similique aliquid doloremque omnis.
                      lastMessageContent: Minus nisi.
                      lastMessageDeliveredAt: Ut sed.
                      lastMessageSenderID: Eos rerum dolor.
                      otherParticipantID: Earum ab est ipsa sint quasi.
                    - ID: Similique aliquid doloremque omnis.
                      lastMessageContent: Minus nisi.
                      lastMessageDeliveredAt: Ut sed.
                      lastMessageSenderID: Eos rerum dolor.
                      otherParticipantID: Earum ab est ipsa sint quasi.
                    - ID: Similique aliquid doloremque omnis.
                      lastMessageContent: Minus nisi.
                      lastMessageDeliveredAt: Ut sed.
                      lastMessageSenderID: Eos rerum dolor.
                      otherParticipantID: Earum ab est ipsa sint quasi.
            total:
                type: integer
                description: Messages Count
                example: 6674498223932712293
                format: int64
        example:
            resources:
                - ID: Similique aliquid doloremque omnis.
                  lastMessageContent: Minus nisi.
                  lastMessageDeliveredAt: Ut sed.
                  lastMessageSenderID: Eos rerum dolor.
                  otherParticipantID: Earum ab est ipsa sint quasi.
                - ID: Similique aliquid doloremque omnis.
                  lastMessageContent: Minus nisi.
                  lastMessageDeliveredAt: Ut sed.
                  lastMessageSenderID: Eos rerum dolor.
                  otherParticipantID: Earum ab est ipsa sint quasi.
                - ID: Similique aliquid doloremque omnis.
                  lastMessageContent: Minus nisi.
                  lastMessageDeliveredAt: Ut sed.
                  lastMessageSenderID: Eos rerum dolor.
                  otherParticipantID: Earum ab est ipsa sint quasi.
            total: 8819807745246675184
        required:
            - total
            - resources
    ChatSearchInConversationResponseBody:
        title: ChatSearchInConversationResponseBody
        type: object
        properties:
            count:
                type: integer
                description: Messages Count
                example: 7459133934160315089
                format: int64
            id:
                type: string
                description: Chatroom ID
                example: Ducimus vitae est repellat culpa.
            messages:
                type: array
                items:
                    $ref: '#/definitions/ConversationMessageResponseBody'
                description: Chat history
                example:
                    - content: Et et.
                      senderID: Et alias qui.
                      timestamp: 0.27752549351619993
                    - content: Et et.
                      senderID: Et alias qui.
                      timestamp: 0.27752549351619993
                    - content: Et et.
                      senderID: Et alias qui.
                      timestamp: 0.27752549351619993
                    - content: Et et.
                      senderID: Et alias qui.
                      timestamp: 0.27752549351619993
        example:
            count: 640041217600641283
            id: Architecto quia ipsam vel.
            messages:
                - content: Et et.
                  senderID: Et alias qui.
                  timestamp: 0.27752549351619993
                - content: Et et.
                  senderID: Et alias qui.
                  timestamp: 0.27752549351619993
                - content: Et et.
                  senderID: Et alias qui.
                  timestamp: 0.27752549351619993
                - content: Et et.
                  senderID: Et alias qui.
                  timestamp: 0.27752549351619993
        required:
            - id
            - count
            - messages
    ConversationMessageResponseBody:
        title: ConversationMessageResponseBody
        type: object
        properties:
            content:
                type: string
                description: Message Content
                example: Qui rerum voluptatem.
            senderID:
                type: string
                description: Sender ID
                example: Error ad.
            timestamp:
                type: number
                description: Timestamp of the message
                example: 0.8326925200617996
                format: double
        example:
            content: Voluptas et aliquid.
            senderID: Fugit dolores sequi ipsum dolorem dolorem.
            timestamp: 0.18391824187844796
        required:
            - timestamp
            - senderID
            - content
    ConversationResponseBody:
        title: ConversationResponseBody
        type: object
        properties:
            ID:
                type: string
                description: Conversation ID
                example: Minima incidunt delectus cumque et et.
            lastMessageContent:
                type: string
                description: Last message
                example: Accusantium error.
            lastMessageDeliveredAt:
                type: string
                description: TS for delivered time
                example: Commodi ut autem nam voluptatem.
            lastMessageSenderID:
                type: string
                description: Sender ID
                example: Animi commodi pariatur reiciendis ex possimus.
            otherParticipantID:
                type: string
                description: TS for delivered time
                example: Autem dolorem ipsum.
        example:
            ID: Veritatis suscipit deleniti sit ipsam.
            lastMessageContent: Illum placeat autem.
            lastMessageDeliveredAt: Qui quia.
            lastMessageSenderID: Est repellendus alias corporis mollitia neque consequuntur.
            otherParticipantID: Est repellendus exercitationem aut delectus.
        required:
            - ID
            - lastMessageSenderID
            - lastMessageContent
            - lastMessageDeliveredAt
            - otherParticipantID
    FriendRequestBody:
        title: FriendRequestBody
        type: object
        properties:
            email:
                type: string
                description: Email
                example: Dolores sit sed officiis consequatur.
            firstName:
                type: string
                description: First name
                example: Quia est in aut id accusantium ab.
            id:
                type: string
                description: User ID
                example: Doloribus atque accusantium odio natus tenetur.
            lastName:
                type: string
                description: Last name
                example: Doloremque sequi sed.
        example:
            email: Voluptates nesciunt rerum beatae praesentium accusantium blanditiis.
            firstName: Et officia quia saepe quia dolore nemo.
            id: Facere consequuntur.
            lastName: Iusto aliquam nihil dolorum et dicta tempore.
        required:
            - id
            - email
            - firstName
            - lastName
    FriendResponseBody:
        title: FriendResponseBody
        type: object
        properties:
            email:
                type: string
                description: Email
                example: Sunt quas et consequatur.
            firstName:
                type: string
                description: First name
                example: Est unde ipsam qui ad ex.
            id:
                type: string
                description: User ID
                example: Ratione recusandae vitae suscipit.
            lastName:
                type: string
                description: Last name
                example: Est placeat laboriosam quia quibusdam ipsum voluptate.
        example:
            email: Eius incidunt est aut voluptatibus omnis sint.
            firstName: Fugit eos voluptas eligendi quam praesentium quas.
            id: Libero in sit doloremque accusantium dolores.
            lastName: Consectetur dicta quaerat iure.
        required:
            - id
            - email
            - firstName
            - lastName
    InfoGetInfoResponseBody:
        title: InfoGetInfoResponseBody
        type: object
        properties:
            message:
                type: string
                description: Operation status
                example: Molestiae omnis.
        example:
            message: Sit perferendis sapiente minima.
        required:
            - message
    UserAddFriendResponseBody:
        title: UserAddFriendResponseBody
        type: object
        properties:
            message:
                type: string
                description: Operation status
                example: Omnis voluptatem.
        example:
            message: Veniam ut impedit distinctio perspiciatis omnis libero.
        required:
            - message
    UserGetProfileResponseBody:
        title: UserGetProfileResponseBody
        type: object
        properties:
            email:
                type: string
                description: Email
                example: Qui officia rerum nulla cum magnam.
            firstName:
                type: string
                description: First name
                example: Reprehenderit eum sint quidem ipsa.
            friendsList:
                type: array
                items:
                    $ref: '#/definitions/FriendResponseBody'
                description: Friendslist
                example:
                    - email: Impedit nisi assumenda ipsum adipisci.
                      firstName: Qui voluptates nostrum iure incidunt dolorem.
                      id: Nihil excepturi dolore eveniet ratione.
                      lastName: Qui sequi voluptates.
                    - email: Impedit nisi assumenda ipsum adipisci.
                      firstName: Qui voluptates nostrum iure incidunt dolorem.
                      id: Nihil excepturi dolore eveniet ratione.
                      lastName: Qui sequi voluptates.
                    - email: Impedit nisi assumenda ipsum adipisci.
                      firstName: Qui voluptates nostrum iure incidunt dolorem.
                      id: Nihil excepturi dolore eveniet ratione.
                      lastName: Qui sequi voluptates.
            id:
                type: string
                description: User ID
                example: Voluptatem incidunt eum reiciendis molestiae quasi impedit.
            lastName:
                type: string
                description: Last name
                example: Cumque iusto.
        example:
            email: Eius hic.
            firstName: Dolorem et sint doloremque deleniti voluptatibus id.
            friendsList:
                - email: Impedit nisi assumenda ipsum adipisci.
                  firstName: Qui voluptates nostrum iure incidunt dolorem.
                  id: Nihil excepturi dolore eveniet ratione.
                  lastName: Qui sequi voluptates.
                - email: Impedit nisi assumenda ipsum adipisci.
                  firstName: Qui voluptates nostrum iure incidunt dolorem.
                  id: Nihil excepturi dolore eveniet ratione.
                  lastName: Qui sequi voluptates.
            id: Consequuntur occaecati.
            lastName: Doloribus dolor voluptatum.
        required:
            - id
            - email
            - firstName
            - lastName
            - friendsList
    UserRegisterRequestBody:
        title: UserRegisterRequestBody
        type: object
        properties:
            confirmedPassword:
                type: string
                description: Confirmed password of the user
                example: Nihil facere temporibus et numquam officia.
            email:
                type: string
                description: User email
                example: Eos repellat et minima voluptatem.
            firstName:
                type: string
                description: User first name
                example: Totam nihil ut.
            lastName:
                type: string
                description: User last name
                example: Impedit est sapiente quas quia voluptatem.
            password:
                type: string
                description: User password
                example: Occaecati asperiores minus impedit sed quis sed.
        example:
            confirmedPassword: Sed numquam.
            email: Ex et nesciunt iure non dolor.
            firstName: Totam velit repudiandae.
            lastName: Corporis ut magnam dolor quas incidunt.
            password: Non dolor earum unde.
        required:
            - email
            - password
            - confirmedPassword
            - firstName
            - lastName
    UserRegisterResponseBody:
        title: UserRegisterResponseBody
        type: object
        properties:
            message:
                type: string
                description: Operation status
                example: Sint aut est hic autem nemo quos.
        example:
            message: Laborum ut officiis commodi quos dolorem.
        required:
            - message
    UserRegisterUniqueEmailErrorResponseBody:
        title: 'Mediatype identifier: application/vnd.goa.error; view=default'
        type: object
        properties:
            fault:
                type: boolean
                description: Is the error a server-side fault?
                example: true
            id:
                type: string
                description: ID is a unique identifier for this particular occurrence of the problem.
                example: 123abc
            message:
                type: string
                description: Message is a human-readable explanation specific to this occurrence of the problem.
                example: parameter 'p' must be an integer
            name:
                type: string
                description: Name is the name of this class of errors.
                example: bad_request
            temporary:
                type: boolean
                description: Is the error temporary?
                example: true
            timeout:
                type: boolean
                description: Is the error a timeout?
                example: false
        description: register_UniqueEmailError_response_body result type (default view)
        example:
            fault: false
            id: 123abc
            message: parameter 'p' must be an integer
            name: bad_request
            temporary: true
            timeout: true
        required:
            - name
            - id
            - message
            - temporary
            - timeout
            - fault
    UserRegisterUnmatchingPassowrdsResponseBody:
        title: 'Mediatype identifier: application/vnd.goa.error; view=default'
        type: object
        properties:
            fault:
                type: boolean
                description: Is the error a server-side fault?
                example: false
            id:
                type: string
                description: ID is a unique identifier for this particular occurrence of the problem.
                example: 123abc
            message:
                type: string
                description: Message is a human-readable explanation specific to this occurrence of the problem.
                example: parameter 'p' must be an integer
            name:
                type: string
                description: Name is the name of this class of errors.
                example: bad_request
            temporary:
                type: boolean
                description: Is the error temporary?
                example: false
            timeout:
                type: boolean
                description: Is the error a timeout?
                example: true
        description: register_UnmatchingPassowrds_response_body result type (default view)
        example:
            fault: false
            id: 123abc
            message: parameter 'p' must be an integer
            name: bad_request
            temporary: false
            timeout: true
        required:
            - name
            - id
            - message
            - temporary
            - timeout
            - fault
    UserRemoveFriendResponseBody:
        title: UserRemoveFriendResponseBody
        type: object
        properties:
            message:
                type: string
                description: Operation status
                example: Qui sint harum sunt rerum delectus corrupti.
        example:
            message: Non ipsam mollitia nulla aut natus.
        required:
            - message
    UserUpdateProfileNamesRequestBody:
        title: UserUpdateProfileNamesRequestBody
        type: object
        properties:
            firstName:
                type: string
                description: Updated user first name
                example: Officia qui debitis et.
            lastName:
                type: string
                description: Updated user last name
                example: Ut consequatur molestiae voluptates.
        example:
            firstName: Sit corporis aut maiores porro.
            lastName: Vel impedit quia.
        required:
            - firstName
            - lastName
    UserUpdateProfileNamesResponseBody:
        title: UserUpdateProfileNamesResponseBody
        type: object
        properties:
            message:
                type: string
                description: Operation status
                example: Consequuntur nisi.
        example:
            message: Corporis sit ullam excepturi labore nesciunt.
        required:
            - message

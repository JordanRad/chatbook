swagger: "2.0"
info:
    title: Chatbook Microservices
    version: ""
host: localhost:80
consumes:
    - application/json
    - application/xml
    - application/gob
produces:
    - application/json
    - application/xml
    - application/gob
paths:
    /api/v1/auth/login:
        post:
            tags:
                - auth
            summary: login auth
            operationId: auth#login
            parameters:
                - name: LoginRequestBody
                  in: body
                  required: true
                  schema:
                    $ref: '#/definitions/AuthLoginRequestBody'
                    required:
                        - email
                        - password
            responses:
                "200":
                    description: OK response.
                    schema:
                        $ref: '#/definitions/AuthLoginResponseBody'
                        required:
                            - email
                            - token
                            - refresh_token
                            - role
                "404":
                    description: Email and/or password don't match
                    schema:
                        $ref: '#/definitions/AuthLoginWrongCredentialsResponseBody'
            schemes:
                - http
    /api/v1/auth/refresh-token:
        post:
            tags:
                - auth
            summary: refreshToken auth
            operationId: auth#refreshToken
            parameters:
                - name: RefreshTokenRequestBody
                  in: body
                  required: true
                  schema:
                    $ref: '#/definitions/AuthRefreshTokenRequestBody'
                    required:
                        - email
                        - refreshToken
            responses:
                "200":
                    description: OK response.
                    schema:
                        $ref: '#/definitions/AuthRefreshTokenResponseBody'
                        required:
                            - email
                            - token
                            - refresh_token
                            - role
            schemes:
                - http
    /api/v1/info:
        get:
            tags:
                - info
            summary: getInfo info
            operationId: info#getInfo
            responses:
                "200":
                    description: OK response.
                    schema:
                        $ref: '#/definitions/InfoGetInfoResponseBody'
                        required:
                            - message
            schemes:
                - http
    /api/v1/users:
        get:
            tags:
                - user
            summary: getUserProfile user
            operationId: user#getUserProfile
            responses:
                "200":
                    description: OK response.
                    schema:
                        $ref: '#/definitions/UserGetUserProfileResponseBody'
                        required:
                            - id
                            - email
                            - firstName
                            - lastName
                            - friendsList
            schemes:
                - http
    /api/v1/users/profile:
        put:
            tags:
                - user
            summary: updateProfileNames user
            operationId: user#updateProfileNames
            parameters:
                - name: UpdateProfileNamesRequestBody
                  in: body
                  required: true
                  schema:
                    $ref: '#/definitions/UserUpdateProfileNamesRequestBody'
                    required:
                        - firstName
                        - lastName
            responses:
                "200":
                    description: OK response.
                    schema:
                        $ref: '#/definitions/UserUpdateProfileNamesResponseBody'
                        required:
                            - message
            schemes:
                - http
    /api/v1/users/register:
        post:
            tags:
                - user
            summary: register user
            operationId: user#register
            parameters:
                - name: RegisterRequestBody
                  in: body
                  required: true
                  schema:
                    $ref: '#/definitions/UserRegisterRequestBody'
                    required:
                        - email
                        - password
                        - confirmedPassword
                        - firstName
                        - lastName
            responses:
                "200":
                    description: OK response.
                    schema:
                        $ref: '#/definitions/UserRegisterResponseBody'
                        required:
                            - message
                "409":
                    description: Provided passwords are not the same
                    schema:
                        $ref: '#/definitions/UserRegisterUnmatchingPassowrdsResponseBody'
            schemes:
                - http
definitions:
    AuthLoginRequestBody:
        title: AuthLoginRequestBody
        type: object
        properties:
            email:
                type: string
                description: User email
                example: Aut facere molestiae cumque quia blanditiis quos.
            password:
                type: string
                description: User password
                example: Amet quia vero illum.
        example:
            email: Quidem sapiente ex et sunt earum.
            password: Enim vel sapiente.
        required:
            - email
            - password
    AuthLoginResponseBody:
        title: AuthLoginResponseBody
        type: object
        properties:
            email:
                type: string
                description: User's email
                example: Et velit illo fugit.
            id:
                type: string
                description: User account's ID
                example: Quia repellat et quia excepturi error.
            refresh_token:
                type: string
                description: Refresh token
                example: Ea autem et rerum ad.
            role:
                type: string
                description: User's role
                example: Quisquam laudantium suscipit qui nesciunt.
            token:
                type: string
                description: JWT Token
                example: Magni officia maxime aut unde libero.
        example:
            email: Aliquid doloremque omnis reprehenderit eos.
            id: Et est consequatur voluptatem quas libero inventore.
            refresh_token: Delectus ut sed soluta earum ab.
            role: Ipsa sint.
            token: Dolor et minus.
        required:
            - email
            - token
            - refresh_token
            - role
    AuthLoginWrongCredentialsResponseBody:
        title: 'Mediatype identifier: application/vnd.goa.error; view=default'
        type: object
        properties:
            fault:
                type: boolean
                description: Is the error a server-side fault?
                example: false
            id:
                type: string
                description: ID is a unique identifier for this particular occurrence of the problem.
                example: 123abc
            message:
                type: string
                description: Message is a human-readable explanation specific to this occurrence of the problem.
                example: parameter 'p' must be an integer
            name:
                type: string
                description: Name is the name of this class of errors.
                example: bad_request
            temporary:
                type: boolean
                description: Is the error temporary?
                example: true
            timeout:
                type: boolean
                description: Is the error a timeout?
                example: false
        description: login_WrongCredentials_response_body result type (default view)
        example:
            fault: false
            id: 123abc
            message: parameter 'p' must be an integer
            name: bad_request
            temporary: true
            timeout: false
        required:
            - name
            - id
            - message
            - temporary
            - timeout
            - fault
    AuthRefreshTokenRequestBody:
        title: AuthRefreshTokenRequestBody
        type: object
        properties:
            email:
                type: string
                description: User email
                example: Vel id doloremque et error.
            refreshToken:
                type: string
                description: Refresh token
                example: Expedita beatae et alias.
        example:
            email: Quo quia et.
            refreshToken: Nisi eos vel atque necessitatibus eum.
        required:
            - email
            - refreshToken
    AuthRefreshTokenResponseBody:
        title: AuthRefreshTokenResponseBody
        type: object
        properties:
            email:
                type: string
                description: User's email
                example: Possimus ad.
            id:
                type: string
                description: User account's ID
                example: Modi officia ipsum consequatur quas velit et.
            refresh_token:
                type: string
                description: Refresh token
                example: Sint quia molestias aut dolores soluta.
            role:
                type: string
                description: User's role
                example: Recusandae libero omnis commodi qui quis et.
            token:
                type: string
                description: JWT Token
                example: Quasi quas.
        example:
            email: Rerum qui.
            id: Similique molestiae necessitatibus sint.
            refresh_token: Eum ullam eveniet temporibus quis dolore mollitia.
            role: Distinctio sunt necessitatibus.
            token: Laboriosam tempore atque mollitia ut.
        required:
            - email
            - token
            - refresh_token
            - role
    FriendResponseBody:
        title: FriendResponseBody
        type: object
        properties:
            email:
                type: string
                description: Email
                example: At ab aut saepe optio doloribus libero.
            firstName:
                type: string
                description: First name
                example: Non beatae.
            id:
                type: integer
                description: User ID
                example: 4705873181574475438
                format: int64
            lastName:
                type: string
                description: Last name
                example: Omnis exercitationem.
        example:
            email: Quaerat sapiente alias sint iste nulla.
            firstName: Eum esse adipisci hic assumenda.
            id: 1997203386397882681
            lastName: Ratione molestiae expedita quam.
        required:
            - id
            - email
            - firstName
            - lastName
    InfoGetInfoResponseBody:
        title: InfoGetInfoResponseBody
        type: object
        properties:
            message:
                type: string
                description: Operation status
                example: Molestiae similique omnis voluptate pariatur non.
        example:
            message: Cum soluta possimus accusamus similique quibusdam.
        required:
            - message
    UserGetUserProfileResponseBody:
        title: UserGetUserProfileResponseBody
        type: object
        properties:
            email:
                type: string
                description: Email
                example: Voluptates blanditiis eum ex nam dolorem fugit.
            firstName:
                type: string
                description: First name
                example: Id velit sint fuga ut dolores quia.
            friendsList:
                type: array
                items:
                    $ref: '#/definitions/FriendResponseBody'
                description: Friendslist
                example:
                    - email: Natus quisquam.
                      firstName: Illo omnis nesciunt minus sed.
                      id: 2306687740220369761
                      lastName: Inventore quisquam.
                    - email: Natus quisquam.
                      firstName: Illo omnis nesciunt minus sed.
                      id: 2306687740220369761
                      lastName: Inventore quisquam.
                    - email: Natus quisquam.
                      firstName: Illo omnis nesciunt minus sed.
                      id: 2306687740220369761
                      lastName: Inventore quisquam.
            id:
                type: integer
                description: User ID
                example: 2919405487196878743
                format: int64
            lastName:
                type: string
                description: Last name
                example: Velit enim modi consequatur.
        example:
            email: Vitae quidem culpa.
            firstName: Iste et consequatur fugiat quia ad aut.
            friendsList:
                - email: Natus quisquam.
                  firstName: Illo omnis nesciunt minus sed.
                  id: 2306687740220369761
                  lastName: Inventore quisquam.
                - email: Natus quisquam.
                  firstName: Illo omnis nesciunt minus sed.
                  id: 2306687740220369761
                  lastName: Inventore quisquam.
                - email: Natus quisquam.
                  firstName: Illo omnis nesciunt minus sed.
                  id: 2306687740220369761
                  lastName: Inventore quisquam.
                - email: Natus quisquam.
                  firstName: Illo omnis nesciunt minus sed.
                  id: 2306687740220369761
                  lastName: Inventore quisquam.
            id: 3518200106484161617
            lastName: Labore maiores.
        required:
            - id
            - email
            - firstName
            - lastName
            - friendsList
    UserRegisterRequestBody:
        title: UserRegisterRequestBody
        type: object
        properties:
            confirmedPassword:
                type: string
                description: Confirmed password of the user
                example: Natus animi aperiam veniam enim.
            email:
                type: string
                description: User email
                example: Iure incidunt dolorem nisi qui.
            firstName:
                type: string
                description: User first name
                example: Et impedit.
            lastName:
                type: string
                description: User last name
                example: Assumenda ipsum adipisci voluptatem qui voluptates.
            password:
                type: string
                description: User password
                example: Voluptates quia asperiores illum accusantium nam ipsa.
        example:
            confirmedPassword: Non ut voluptas aut.
            email: Labore aut vel.
            firstName: Ad voluptatem dolor quae.
            lastName: Deleniti aut.
            password: Eligendi reiciendis fuga.
        required:
            - email
            - password
            - confirmedPassword
            - firstName
            - lastName
    UserRegisterResponseBody:
        title: UserRegisterResponseBody
        type: object
        properties:
            message:
                type: string
                description: Operation status
                example: Veniam eos rerum quas et et.
        example:
            message: Occaecati minima amet architecto sint.
        required:
            - message
    UserRegisterUniqueEmailErrorResponseBody:
        title: 'Mediatype identifier: application/vnd.goa.error; view=default'
        type: object
        properties:
            fault:
                type: boolean
                description: Is the error a server-side fault?
                example: false
            id:
                type: string
                description: ID is a unique identifier for this particular occurrence of the problem.
                example: 123abc
            message:
                type: string
                description: Message is a human-readable explanation specific to this occurrence of the problem.
                example: parameter 'p' must be an integer
            name:
                type: string
                description: Name is the name of this class of errors.
                example: bad_request
            temporary:
                type: boolean
                description: Is the error temporary?
                example: false
            timeout:
                type: boolean
                description: Is the error a timeout?
                example: false
        description: register_UniqueEmailError_response_body result type (default view)
        example:
            fault: false
            id: 123abc
            message: parameter 'p' must be an integer
            name: bad_request
            temporary: false
            timeout: false
        required:
            - name
            - id
            - message
            - temporary
            - timeout
            - fault
    UserRegisterUnmatchingPassowrdsResponseBody:
        title: 'Mediatype identifier: application/vnd.goa.error; view=default'
        type: object
        properties:
            fault:
                type: boolean
                description: Is the error a server-side fault?
                example: true
            id:
                type: string
                description: ID is a unique identifier for this particular occurrence of the problem.
                example: 123abc
            message:
                type: string
                description: Message is a human-readable explanation specific to this occurrence of the problem.
                example: parameter 'p' must be an integer
            name:
                type: string
                description: Name is the name of this class of errors.
                example: bad_request
            temporary:
                type: boolean
                description: Is the error temporary?
                example: false
            timeout:
                type: boolean
                description: Is the error a timeout?
                example: false
        description: register_UnmatchingPassowrds_response_body result type (default view)
        example:
            fault: false
            id: 123abc
            message: parameter 'p' must be an integer
            name: bad_request
            temporary: false
            timeout: false
        required:
            - name
            - id
            - message
            - temporary
            - timeout
            - fault
    UserUpdateProfileNamesRequestBody:
        title: UserUpdateProfileNamesRequestBody
        type: object
        properties:
            firstName:
                type: string
                description: Updated user first name
                example: Voluptates quam rerum qui molestias veritatis.
            lastName:
                type: string
                description: Updated user last name
                example: Aut quisquam eum suscipit consequatur dolor ducimus.
        example:
            firstName: Labore culpa.
            lastName: Voluptatum ut libero veritatis odio.
        required:
            - firstName
            - lastName
    UserUpdateProfileNamesResponseBody:
        title: UserUpdateProfileNamesResponseBody
        type: object
        properties:
            message:
                type: string
                description: Operation status
                example: Molestiae mollitia sequi magnam et beatae.
        example:
            message: Accusamus praesentium rem dicta reiciendis praesentium aperiam.
        required:
            - message
